Description: Upstream patch to fix octave support for octave 3.8.
Author: Andrew Ross <andrewross@users.sourceforge.net>
Last-Update: 2014-09-23
--- a/examples/octave/x23c.m
+++ b/examples/octave/x23c.m
@@ -1,5 +1,3 @@
-## $Id: x23c.m 11680 2011-03-27 17:57:51Z airwin $
-##
 ## Displays Greek letters and mathematically interesting Unicode ranges
 ## Copyright (C) 2005 Alan Irwin 
 ## Copyright (C) 2005 Andrew Ross 
@@ -34,186 +32,186 @@
   endif
 
 
-  Greek = [\
-"#gA";"#gB";"#gG";"#gD";"#gE";"#gZ";"#gY";"#gH";"#gI";"#gK";"#gL";"#gM";\
-"#gN";"#gC";"#gO";"#gP";"#gR";"#gS";"#gT";"#gU";"#gF";"#gX";"#gQ";"#gW";\
-"#ga";"#gb";"#gg";"#gd";"#ge";"#gz";"#gy";"#gh";"#gi";"#gk";"#gl";"#gm";\
-"#gn";"#gc";"#go";"#gp";"#gr";"#gs";"#gt";"#gu";"#gf";"#gx";"#gq";"#gw";\
+  Greek = [...
+"#gA";"#gB";"#gG";"#gD";"#gE";"#gZ";"#gY";"#gH";"#gI";"#gK";"#gL";"#gM";
+"#gN";"#gC";"#gO";"#gP";"#gR";"#gS";"#gT";"#gU";"#gF";"#gX";"#gQ";"#gW";
+"#ga";"#gb";"#gg";"#gd";"#ge";"#gz";"#gy";"#gh";"#gi";"#gk";"#gl";"#gm";
+"#gn";"#gc";"#go";"#gp";"#gr";"#gs";"#gt";"#gu";"#gf";"#gx";"#gq";"#gw";
 	   ];
 
-  Type1 = [\
-0x0020,0x0021,0x0023,0x0025,0x0026,\
-0x0028,0x0029,0x002b,0x002c,0x002e,\
-0x002f,0x0030,0x0031,0x0032,0x0033,\
-0x0034,0x0035,0x0036,0x0037,0x0038,\
-0x0039,0x003a,0x003b,0x003c,0x003d,\
-0x003e,0x003f,0x005b,0x005d,0x005f,\
-0x007b,0x007c,0x007d,0x00a9,0x00ac,\
-0x00ae,0x00b0,0x00b1,0x00d7,0x00f7,\
-0x0192,0x0391,0x0392,0x0393,0x0394,\
-0x0395,0x0396,0x0397,0x0398,0x0399,\
-0x039a,0x039b,0x039c,0x039d,0x039e,\
-0x039f,0x03a0,0x03a1,0x03a3,0x03a4,\
-0x03a5,0x03a6,0x03a7,0x03a8,0x03a9,\
-0x03b1,0x03b2,0x03b3,0x03b4,0x03b5,\
-0x03b6,0x03b7,0x03b8,0x03b9,0x03ba,\
-0x03bb,0x03bc,0x03bd,0x03be,0x03bf,\
-0x03c0,0x03c1,0x03c2,0x03c3,0x03c4,\
-0x03c5,0x03c6,0x03c7,0x03c8,0x03c9,\
-0x03d1,0x03d2,0x03d5,0x03d6,0x2022,\
-0x2026,0x2032,0x2033,0x203e,0x2044,\
-0x2111,0x2118,0x211c,0x2122,0x2126,\
-0x2135,0x2190,0x2191,0x2192,0x2193,\
-0x2194,0x21b5,0x21d0,0x21d1,0x21d2,\
-0x21d3,0x21d4,0x2200,0x2202,0x2203,\
-0x2205,0x2206,0x2207,0x2208,0x2209,\
-0x220b,0x220f,0x2211,0x2212,0x2215,\
-0x2217,0x221a,0x221d,0x221e,0x2220,\
-0x2227,0x2228,0x2229,0x222a,0x222b,\
-0x2234,0x223c,0x2245,0x2248,0x2260,\
-0x2261,0x2264,0x2265,0x2282,0x2283,\
-0x2284,0x2286,0x2287,0x2295,0x2297,\
-0x22a5,0x22c5,0x2320,0x2321,0x2329,\
-0x232a,0x25ca,0x2660,0x2663,0x2665,\
-0x2666,\
-];
-
- title = {\
-"#<0x10>PLplot Example 23 - Greek Letters";\
-"#<0x10>PLplot Example 23 - Type 1 Symbol Font Glyphs by Unicode (a)";\
-"#<0x10>PLplot Example 23 - Type 1 Symbol Font Glyphs by Unicode (b)";\
-"#<0x10>PLplot Example 23 - Type 1 Symbol Font Glyphs by Unicode (c)";\
-"#<0x10>PLplot Example 23 - Number Forms Unicode Block";\
-"#<0x10>PLplot Example 23 - Arrows Unicode Block (a)";\
-"#<0x10>PLplot Example 23 - Arrows Unicode Block (b)";\
-"#<0x10>PLplot Example 23 - Mathematical Operators Unicode Block (a)";\
-"#<0x10>PLplot Example 23 - Mathematical Operators Unicode Block (b)";\
-"#<0x10>PLplot Example 23 - Mathematical Operators Unicode Block (c)";\
-"#<0x10>PLplot Example 23 - Mathematical Operators Unicode Block (d)"\
+  Type1 = [...
+0x0020,0x0021,0x0023,0x0025,0x0026,...
+0x0028,0x0029,0x002b,0x002c,0x002e,...
+0x002f,0x0030,0x0031,0x0032,0x0033,...
+0x0034,0x0035,0x0036,0x0037,0x0038,...
+0x0039,0x003a,0x003b,0x003c,0x003d,...
+0x003e,0x003f,0x005b,0x005d,0x005f,...
+0x007b,0x007c,0x007d,0x00a9,0x00ac,...
+0x00ae,0x00b0,0x00b1,0x00d7,0x00f7,...
+0x0192,0x0391,0x0392,0x0393,0x0394,...
+0x0395,0x0396,0x0397,0x0398,0x0399,...
+0x039a,0x039b,0x039c,0x039d,0x039e,...
+0x039f,0x03a0,0x03a1,0x03a3,0x03a4,...
+0x03a5,0x03a6,0x03a7,0x03a8,0x03a9,...
+0x03b1,0x03b2,0x03b3,0x03b4,0x03b5,...
+0x03b6,0x03b7,0x03b8,0x03b9,0x03ba,...
+0x03bb,0x03bc,0x03bd,0x03be,0x03bf,...
+0x03c0,0x03c1,0x03c2,0x03c3,0x03c4,...
+0x03c5,0x03c6,0x03c7,0x03c8,0x03c9,...
+0x03d1,0x03d2,0x03d5,0x03d6,0x2022,...
+0x2026,0x2032,0x2033,0x203e,0x2044,...
+0x2111,0x2118,0x211c,0x2122,0x2126,...
+0x2135,0x2190,0x2191,0x2192,0x2193,...
+0x2194,0x21b5,0x21d0,0x21d1,0x21d2,...
+0x21d3,0x21d4,0x2200,0x2202,0x2203,...
+0x2205,0x2206,0x2207,0x2208,0x2209,...
+0x220b,0x220f,0x2211,0x2212,0x2215,...
+0x2217,0x221a,0x221d,0x221e,0x2220,...
+0x2227,0x2228,0x2229,0x222a,0x222b,...
+0x2234,0x223c,0x2245,0x2248,0x2260,...
+0x2261,0x2264,0x2265,0x2282,0x2283,...
+0x2284,0x2286,0x2287,0x2295,0x2297,...
+0x22a5,0x22c5,0x2320,0x2321,0x2329,...
+0x232a,0x25ca,0x2660,0x2663,0x2665,...
+0x2666,...
+];
+
+ title = {
+"#<0x10>PLplot Example 23 - Greek Letters";
+"#<0x10>PLplot Example 23 - Type 1 Symbol Font Glyphs by Unicode (a)";
+"#<0x10>PLplot Example 23 - Type 1 Symbol Font Glyphs by Unicode (b)";
+"#<0x10>PLplot Example 23 - Type 1 Symbol Font Glyphs by Unicode (c)";
+"#<0x10>PLplot Example 23 - Number Forms Unicode Block";
+"#<0x10>PLplot Example 23 - Arrows Unicode Block (a)";
+"#<0x10>PLplot Example 23 - Arrows Unicode Block (b)";
+"#<0x10>PLplot Example 23 - Mathematical Operators Unicode Block (a)";
+"#<0x10>PLplot Example 23 - Mathematical Operators Unicode Block (b)";
+"#<0x10>PLplot Example 23 - Mathematical Operators Unicode Block (c)";
+"#<0x10>PLplot Example 23 - Mathematical Operators Unicode Block (d)"
 };
 
- lo = [\
-0x0,\
-0x0,\
-0x40,\
-0x80,\
-0x2153,\
-0x2190,\
-0x21d0,\
-0x2200,\
-0x2240,\
-0x2280,\
-0x22c0,\
-];
-
- hi = [\
-0x30,\
-0x40,\
-0x80,\
-0xA6,\
-0x2184,\
-0x21d0,\
-0x2200,\
-0x2240,\
-0x2280,\
-0x22c0,\
-0x2300,\
-];
-
- nxcells = [\
-12,\
-8,\
-8,\
-8,\
-8,\
-8,\
-8,\
-8,\
-8,\
-8,\
-8,\
-];
-
-nycells = [\
-8,\
-8,\
-8,\
-8,\
-8,\
-8,\
-8,\
-8,\
-8,\
-8,\
-8,\
+ lo = [
+0x0,
+0x0,
+0x40,
+0x80,
+0x2153,
+0x2190,
+0x21d0,
+0x2200,
+0x2240,
+0x2280,
+0x22c0,
+];
+
+ hi = [
+0x30,
+0x40,
+0x80,
+0xA6,
+0x2184,
+0x21d0,
+0x2200,
+0x2240,
+0x2280,
+0x22c0,
+0x2300,
+];
+
+ nxcells = [
+12,
+8,
+8,
+8,
+8,
+8,
+8,
+8,
+8,
+8,
+8,
+];
+
+nycells = [
+8,
+8,
+8,
+8,
+8,
+8,
+8,
+8,
+8,
+8,
+8,
 ];
 
 ## non-zero values Must be consistent with nxcells and nycells.
-offset = [\
-0,\
-0,\
-64,\
-128,\
-0,\
-0,\
-0,\
-0,\
-0,\
-0,\
-0,\
+offset = [
+0,
+0,
+64,
+128,
+0,
+0,
+0,
+0,
+0,
+0,
+0,
 ];
 
 ## 30 possible FCI values.
 FCI_COMBINATIONS = 30;
 
-fci = [\
-0x80000000,\
-0x80000001,\
-0x80000002,\
-0x80000003,\
-0x80000004,\
-0x80000010,\
-0x80000011,\
-0x80000012,\
-0x80000013,\
-0x80000014,\
-0x80000020,\
-0x80000021,\
-0x80000022,\
-0x80000023,\
-0x80000024,\
-0x80000100,\
-0x80000101,\
-0x80000102,\
-0x80000103,\
-0x80000104,\
-0x80000110,\
-0x80000111,\
-0x80000112,\
-0x80000113,\
-0x80000114,\
-0x80000120,\
-0x80000121,\
-0x80000122,\
-0x80000123,\
-0x80000124,\
-];
-
-family = [\
-  "sans-serif";\
-  "serif";\
-  "monospace";\
-  "script";\
-  "symbol"\
-];
-style = [\
-  "upright";\
-  "italic";\
-  "oblique"\
-];
-weight = [\
-  "medium";\
-  "bold"\
+fci = [
+0x80000000,
+0x80000001,
+0x80000002,
+0x80000003,
+0x80000004,
+0x80000010,
+0x80000011,
+0x80000012,
+0x80000013,
+0x80000014,
+0x80000020,
+0x80000021,
+0x80000022,
+0x80000023,
+0x80000024,
+0x80000100,
+0x80000101,
+0x80000102,
+0x80000103,
+0x80000104,
+0x80000110,
+0x80000111,
+0x80000112,
+0x80000113,
+0x80000114,
+0x80000120,
+0x80000121,
+0x80000122,
+0x80000123,
+0x80000124,
+];
+
+family = [
+  "sans-serif";
+  "serif";
+  "monospace";
+  "script";
+  "symbol"
+];
+style = [
+  "upright";
+  "italic";
+  "oblique"
+];
+weight = [
+  "medium";
+  "bold"
 ];
 
 
--- a/examples/octave/x28c.m
+++ b/examples/octave/x28c.m
@@ -1,5 +1,3 @@
-## $Id: x28c.m 11680 2011-03-27 17:57:51Z airwin $
-##
 ## plmtex3, plptex3 demo
 ##
 ## Copyright (C) 2007 Alan Irwin 
@@ -86,8 +84,8 @@
   plw3d(1.0, 1.0, 1.0, xmin, xmax, ymin, ymax, zmin, zmax, 20., 45.);
    
   plcol0(2);
-  plbox3("b", "", xrange, 0, \
-	 "b", "", yrange, 0, \
+  plbox3("b", "", xrange, 0,
+	 "b", "", yrange, 0,
 	 "bcd", "", zrange, 0);
 
   ## z = zmin. 
@@ -102,9 +100,9 @@
     x_shear = -0.5*xrange*sin_omega;
     y_shear = 0.5*yrange*cos_omega;
     z_shear = 0.;
-    plptex3(xmid, ymid, zmin, \
-	    x_inclination, y_inclination, z_inclination, \
-	    x_shear, y_shear, z_shear, \
+    plptex3(xmid, ymid, zmin,
+	    x_inclination, y_inclination, z_inclination,
+	    x_shear, y_shear, z_shear,
 	    0.0, "  revolution");
   endfor
   ## x = xmax.
@@ -119,9 +117,9 @@
     x_shear = 0.;
     y_shear = 0.5*yrange*sin_omega;
     z_shear = 0.5*zrange*cos_omega;
-    plptex3(xmax, ymid, zmid, \
-	    x_inclination, y_inclination, z_inclination, \
-	    x_shear, y_shear, z_shear, \
+    plptex3(xmax, ymid, zmid,
+	    x_inclination, y_inclination, z_inclination,
+	    x_shear, y_shear, z_shear,
 	    0.0, "  revolution");
   endfor
 
@@ -137,10 +135,10 @@
     x_shear = -0.5*xrange*sin_omega;
     y_shear = 0.;
     z_shear = 0.5*zrange*cos_omega;
-    plptex3( \
-	    xmid, ymax, zmid, \
-	    x_inclination, y_inclination, z_inclination, \
-	    x_shear, y_shear, z_shear, \
+    plptex3(
+	    xmid, ymax, zmid,
+	    x_inclination, y_inclination, z_inclination,
+	    x_shear, y_shear, z_shear,
 	    0.0, "  revolution");
   endfor
   ## Draw minimal 3D grid to finish defining the 3D box.
@@ -153,8 +151,8 @@
   plw3d(1.0, 1.0, 1.0, xmin, xmax, ymin, ymax, zmin, zmax, 20., 45.);
    
   plcol0(2);
-  plbox3("b", "", xrange, 0, \
-	 "b", "", yrange, 0, \
+  plbox3("b", "", xrange, 0,
+	 "b", "", yrange, 0,
 	 "bcd", "", zrange, 0);
 
   ## y = ymax.
@@ -170,10 +168,10 @@
     y_shear = 0.5*yrange*sin_omega;
     z_shear = 0.5*zrange*cos_omega;
     zs = zsmax - dzsrot*i;
-    plptex3( \
-	    xmid, ymax, zs, \
-	    x_inclination, y_inclination, z_inclination, \
-	    x_shear, y_shear, z_shear, \
+    plptex3(
+	    xmid, ymax, zs,
+	    x_inclination, y_inclination, z_inclination,
+	    x_shear, y_shear, z_shear,
 	    0.5, "rotation for y = y#dmax#u");
   endfor
 
@@ -190,10 +188,10 @@
     x_shear = 0.5*xrange*sin_omega;
     z_shear = 0.5*zrange*cos_omega;
     zs = zsmax - dzsrot*i;
-    plptex3( \
-	    xmax, ymid, zs, \
-	    x_inclination, y_inclination, z_inclination, \
-	    x_shear, y_shear, z_shear, \
+    plptex3(
+	    xmax, ymid, zs,
+	    x_inclination, y_inclination, z_inclination,
+	    x_shear, y_shear, z_shear,
 	    0.5, "rotation for x = x#dmax#u");
   endfor
 
@@ -210,10 +208,10 @@
     y_shear = 0.5*yrange*cos_omega;
     z_shear = 0.5*zrange*sin_omega;
     ys = ysmax - dysrot*i;
-    plptex3( \
-	    xmid, ys, zmin, \
-	    x_inclination, y_inclination, z_inclination, \
-	    x_shear, y_shear, z_shear, \
+    plptex3(
+	    xmid, ys, zmin,
+	    x_inclination, y_inclination, z_inclination,
+	    x_shear, y_shear, z_shear,
 	    0.5, "rotation for z = z#dmin#u");
   endfor
   ## Draw minimal 3D grid to finish defining the 3D box.
@@ -230,8 +228,8 @@
   plw3d(1.0, 1.0, 1.0, xmin, xmax, ymin, ymax, zmin, zmax, 20., 45.);
    
   plcol0(2);
-  plbox3("b", "", xrange, 0, \
-	 "b", "", yrange, 0, \
+  plbox3("b", "", xrange, 0,
+	 "b", "", yrange, 0,
 	 "bcd", "", zrange, 0);
 
   ## y = ymax.
@@ -247,10 +245,10 @@
     x_shear = 0.5*xrange*sin_omega;
     z_shear = 0.5*zrange*cos_omega;
     zs = zsmax-dzsshear*i;
-    plptex3( \
-	    xmid, ymax, zs, \
-	    x_inclination, y_inclination, z_inclination, \
-	    x_shear, y_shear, z_shear, \
+    plptex3(
+	    xmid, ymax, zs,
+	    x_inclination, y_inclination, z_inclination,
+	    x_shear, y_shear, z_shear,
 	    0.5, "shear for y = y#dmax#u");
   endfor
 
@@ -267,10 +265,10 @@
     y_shear = -0.5*yrange*sin_omega;
     z_shear = 0.5*zrange*cos_omega;
     zs = zsmax-dzsshear*i;
-    plptex3( \
-	    xmax, ymid, zs, \
-	    x_inclination, y_inclination, z_inclination, \
-	    x_shear, y_shear, z_shear, \
+    plptex3(
+	    xmax, ymid, zs,
+	    x_inclination, y_inclination, z_inclination,
+	    x_shear, y_shear, z_shear,
 	    0.5, "shear for x = x#dmax#u");
   endfor
 
@@ -287,10 +285,10 @@
     y_shear = 0.5*yrange*cos_omega;
     x_shear = 0.5*xrange*sin_omega;
     ys = ysmax-dysshear*i;
-    plptex3( \
-	    xmid, ys, zmin, \
-	    x_inclination, y_inclination, z_inclination, \
-	    x_shear, y_shear, z_shear, \
+    plptex3(
+	    xmid, ys, zmin,
+	    x_inclination, y_inclination, z_inclination,
+	    x_shear, y_shear, z_shear,
 	    0.5, "shear for z = z#dmin#u");
   endfor
   ## Draw minimal 3D grid to finish defining the 3D box.
@@ -303,8 +301,8 @@
   plw3d(1.0, 1.0, 1.0, xmin, xmax, ymin, ymax, zmin, zmax, 40., -30.);
   
   plcol0(2);
-  plbox3("b", "", xrange, 0, \
-	 "b", "", yrange, 0, \
+  plbox3("b", "", xrange, 0,
+	 "b", "", yrange, 0,
 	 "bcd", "", zrange, 0);
 
   plschr(0., 1.2);
@@ -334,10 +332,10 @@
     y_shear = 0.;
     z_shear = 1.;
     p1string = pstring(i:i);
-    plptex3( \
-	    xpos, ypos, zpos, \
-	    x_inclination, y_inclination, z_inclination, \
-	    x_shear, y_shear, z_shear, \
+    plptex3(
+	    xpos, ypos, zpos,
+	    x_inclination, y_inclination, z_inclination,
+	    x_shear, y_shear, z_shear,
 	    0.5, p1string);
     omega += domega;
   endfor
@@ -351,8 +349,8 @@
   plw3d(1.0, 1.0, 1.0, xmin, xmax, ymin, ymax, zmin, zmax, 20., 45.);
   
   plcol0(2);
-  plbox3("b", "", xrange, 0, \
-	 "b", "", yrange, 0, \
+  plbox3("b", "", xrange, 0,
+	 "b", "", yrange, 0,
 	 "bcd", "", zrange, 0);
 
   plschr(0., 1.0);
@@ -377,4 +375,4 @@
 
 endfunction
 
-ix28c
\ No newline at end of file
+ix28c
--- a/examples/octave/x33c.m
+++ b/examples/octave/x33c.m
@@ -1,6 +1,4 @@
-## -*- coding: utf-8; -*-
-## $Id: x33c.m 12353 2013-06-02 20:07:07Z andrewross $
-##  Copyright (C) 2010 Alan W. Irwin
+##  Copyright (C) 2010-2014 Alan W. Irwin
 ##
 ##  Demonstrate most pllegend capability including unicode symbols.
 ##
@@ -195,12 +193,12 @@
         plwind( 0.0, 1.0, 0.0, 1.0 );
         # Set interesting background colour.
         plscol0a( 15, 0, 0, 0, 0.20 );
-        [colorbar_width, colorbar_height] = plcolorbar( \
-            bitor(opt, bitor(PL_COLORBAR_BOUNDING_BOX, PL_COLORBAR_BACKGROUND)), \
-            position, x, y, x_length, y_length, \
-            15, 1, 1, low_cap_color, high_cap_color, \
-            cont_color, cont_width, label_opts, label, \
-            axis_opts, ticks, sub_ticks, \
+        [colorbar_width, colorbar_height] = plcolorbar(
+            bitor(opt, bitor(PL_COLORBAR_BOUNDING_BOX, PL_COLORBAR_BACKGROUND)),
+            position, x, y, x_length, y_length,
+            15, 1, 1, low_cap_color, high_cap_color,
+            cont_color, cont_width, label_opts, label,
+            axis_opts, ticks, sub_ticks,
             n_values_array, values_array );
 
         # Reset text and tick sizes
@@ -313,7 +311,7 @@
     line_colors(1) = 1 + mod(k, 8);
     symbol_colors(1) = 1 + mod(k, 8);
 
-    [legend_width, legend_height] = \
+    [legend_width, legend_height] = ...
 	pllegend( opt, position, 0.05, 0.05,
 		 0.1, 15, 1, 1, 0, 0, opt_array, 1.0, 1.0, 2.0,
 		 1., text_colors, text,
@@ -393,7 +391,7 @@
   y = 0.1;
   nrow = 1;
   ncolumn = nlegend;
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( opt, position, x, y,
 	       0.05, 15, 1, 1, nrow, ncolumn, opt_array, 1.0, 1.0, 2.0,
 	       1., text_colors, text,
@@ -407,7 +405,7 @@
   y = 0.1;
   nrow = 1;
   ncolumn = nlegend;
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( opt, position, x, y,
 	       0.05, 15, 1, 1, nrow, ncolumn, opt_array, 1.0, 1.0, 2.0,
 	       1., text_colors, text,
@@ -422,7 +420,7 @@
   y = 0.;
   nrow = nlegend;
   ncolumn = 1;
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( opt, position, x, y,
 	       0.05, 15, 1, 1, nrow, ncolumn, opt_array, 1.0, 1.0, 2.0,
 	       1., text_colors, text,
@@ -436,7 +434,7 @@
   y = 0.;
   nrow = nlegend;
   ncolumn = 1;
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( opt, position, x, y,
 	       0.05, 15, 1, 1, nrow, ncolumn, opt_array, 1.0, 1.0, 2.0,
 	       1., text_colors, text,
@@ -450,7 +448,7 @@
   y = 0.;
   nrow = 6;
   ncolumn = 2;
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( opt, position, x, y,
 	       0.05, 15, 1, 1, nrow, ncolumn, opt_array, 1.0, 1.0, 2.0,
 	       1., text_colors, text,
@@ -464,7 +462,7 @@
   y = 0.;
   nrow = 6;
   ncolumn = 2;
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( opt, position, x, y,
 	       0.05, 15, 1, 1, nrow, ncolumn, opt_array, 1.0, 1.0, 2.0,
 	       1., text_colors, text,
@@ -478,7 +476,7 @@
   y = 0.;
   nrow = 3;
   ncolumn = 3;
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( opt, position, x, y,
 	       0.05, 15, 1, 1, nrow, ncolumn, opt_array, 1.0, 1.0, 2.0,
 	       1., text_colors, text,
@@ -568,7 +566,7 @@
     nrow = min(3, nlegend);
     ncolumn = 0;
 
-    [legend_width, legend_height] = \
+    [legend_width, legend_height] = ...
         pllegend( opt, position, x, y,
                  0.025, 15, 1, 1, nrow, ncolumn, opt_array, 1.0, 1.0, 1.5,
                  1., text_colors, text,
@@ -685,7 +683,7 @@
 
   opt = opt_base;
   plscol0a( 15, 32, 32, 32, 0.70 );
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( opt, position, x, y,
                0.1, 15, 1, 1, 0, 0, opt_array, 1.0, text_scale, 2.0,
                0., text_colors, text,
@@ -716,7 +714,7 @@
   opt = opt_base;
   x += legend_width;
   plscol0a( 15, 32, 32, 32, 0.70 );
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( opt, position, x, y,
 	       0.1, 15, 1, 1, 0, 0, opt_array, 1.0, text_scale, 2.0,
 	       0., text_colors, text,
@@ -747,7 +745,7 @@
   opt = opt_base;
   x += legend_width;
   plscol0a( 15, 32, 32, 32, 0.70 );
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( opt, position, x, y,
 	       0.1, 15, 1, 1, 0, 0, opt_array, 1.0, text_scale, 2.0,
 	       0., text_colors, text,
@@ -781,7 +779,7 @@
   y += max_height;
   max_height = 0.;
   plscol0a( 15, 32, 32, 32, 0.70 );
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( opt, position, x, y,
                0.1, 15, 1, 1, 0, 0, opt_array, 1.0, text_scale, 2.0,
                0., text_colors, text,
@@ -812,7 +810,7 @@
   opt = opt_base;
   x += legend_width;
   plscol0a( 15, 32, 32, 32, 0.70 );
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( opt, position, x, y,
                0.1, 15, 1, 1, 0, 0, opt_array, 1.0, text_scale, 2.0,
                0., text_colors, text,
@@ -843,7 +841,7 @@
   opt = opt_base;
   x += legend_width;
   plscol0a( 15, 32, 32, 32, 0.70 );
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( opt, position, x, y,
                0.1, 15, 1, 1, 0, 0, opt_array, 1.0, text_scale, 2.0,
                0., text_colors, text,
@@ -878,7 +876,7 @@
   y += max_height;
   max_height = 0.;
   plscol0a( 15, 32, 32, 32, 0.70 );
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( opt, position, x, y,
                0.1, 15, 1, 1, 0, 0, opt_array, 1.0, text_scale, 2.0,
                0., text_colors, text',
@@ -905,7 +903,7 @@
   opt = opt_base;
   x += legend_width;
   plscol0a( 15, 32, 32, 32, 0.70 );
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( opt, position, x, y,
                0.1, 15, 1, 1, 0, 0, opt_array, 1.0, text_scale, 2.0,
                0., text_colors, text',
@@ -933,7 +931,7 @@
   opt = opt_base;
   x += legend_width;
   plscol0a( 15, 32, 32, 32, 0.70 );
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( opt, position, x, y,
                0.1, 15, 1, 1, 0, 0, opt_array, 1.0, text_scale, 2.0,
                0., text_colors, text',
--- a/plplot_test/test_octave.sh.in
+++ b/plplot_test/test_octave.sh.in
@@ -35,7 +35,12 @@
 export LD_LIBRARY_PATH="$TOPDIR"/src:"$TOPDIR"/lib/csa:"$TOPDIR"/lib/nn
 
 # Launch an Octave script that exercises all the demos
-$octave -f -q -p "$octavedir" <<EOF 2> test.error
+$octave -f -q  <<EOF 2> test.error
+
+# Disable warnings about shadowed functions - PLplot is _supposed_ to shadow the core functions
+warning("off","Octave:shadowed-function");
+
+addpath(getenv("octavedir"));
 
 # Check verbose_test variable
 if (strcmp(getenv("verbose_test"),"on") == 1)
@@ -46,13 +51,15 @@
 
 plplot_stub;
 t = char(strsplit("$options", "-")); 
-if (t); t(1,:)=""; endif;
-for i=1:rows(t)
-    tt = deblank (t(i,:)); len = length(tt);
-    ix = index(tt," ");
-    if (ix == 0); ix = len; len = 0; endif
-    plsetopt(tt(1:ix), tt(ix+1:len));
-endfor
+if (t)
+    t(1,:)="";
+    for i=1:rows(t)
+        tt = deblank (t(i,:)); len = length(tt);
+        ix = index(tt," ");
+        if (ix == 0); ix = len; len = 0; endif
+        plsetopt(tt(1:ix), tt(ix+1:len));
+    endfor
+endif
 
 # Subset of p examples selected that seem to work ok with noninteractive
 # devices.
@@ -80,13 +87,15 @@
 	printf("%s\n",cmd);
     endif
     t = char(strsplit("$options", "-")); 
-    if (t) ; t(1,:)=""; endif
-    for j=1:rows(t)
-        tt = deblank (t(j,:)); len = length(tt);
-	ix = index(tt," ");
-	if (ix == 0); ix = len; len = 0; endif
-	plSetOpt(deblank(tt(1:ix)), tt(ix:len));
-    endfor
+    if (t)
+        t(1,:)="";
+        for j=1:rows(t)
+            tt = deblank (t(j,:)); len = length(tt);
+       	    ix = index(tt," ");
+	    if (ix == 0); ix = len; len = 0; endif
+	    plSetOpt(deblank(tt(1:ix)), tt(ix:len));
+        endfor
+    endif
     device="$device";
     plSetOpt("dev", device);
 #o trailer on filename e.g., x01o.ps) to distinguish from other
--- a/examples/octave/x01c.m
+++ b/examples/octave/x01c.m
@@ -85,7 +85,7 @@
     printf("\n\nYou are in Locate mode. Click any mouse button or press any key\n\
 and the current cursor position will be printed.\n\
 Please keep <NumLock> and <CapsLock> off.\n\
-Terminate locate mode with the <Enter> key.\n\ 
+Terminate locate mode with the <Enter> key.\n\
 Finish the plot with the <Enter> or <ESC> key or the 3d mouse button\n");
 
     fflush(stdout);
--- a/examples/octave/x04c.m
+++ b/examples/octave/x04c.m
@@ -155,7 +155,7 @@
 
   plscol0a( 15, 32, 32, 32, 0.70 );
 
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( bitor(PL_LEGEND_BACKGROUND, PL_LEGEND_BOUNDING_BOX), 0, 0.0, 0.0,
                0.1, 15, 1, 1, 0, 0, opt_array, 1.0, 1.0, 2.0,
                1., text_colors, text, 
--- a/examples/octave/x07c.m
+++ b/examples/octave/x07c.m
@@ -24,7 +24,7 @@
   ## Initialize plplot */
   plinit();
 
-  base=[0, 100, 0, 100, 200, 500, 600, 700, 800, 900, \
+  base=[0, 100, 0, 100, 200, 500, 600, 700, 800, 900, ...
 	2000, 2100, 2200, 2300, 2400, 2500, 2600, 2700, 2800, 2900];
   
   plfontld(0);
--- a/examples/octave/x08c.m
+++ b/examples/octave/x08c.m
@@ -101,10 +101,10 @@
 	plmtex("t", 1.0, 0.5, 0.5, title(k,:));
 	plcol0(1);
 	if (rosen)
-          plw3d(1.0, 1.0, 1.0, -1.5, 1.5, -0.5, 1.5, zmin, zmax, \ 
+          plw3d(1.0, 1.0, 1.0, -1.5, 1.5, -0.5, 1.5, zmin, zmax,
                 alt(k), az(k));
 	else
-	  plw3d(1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, zmin, zmax, \
+	  plw3d(1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, zmin, zmax,
 		alt(k), az(k));
 	endif
 
--- a/examples/octave/x26c.m
+++ b/examples/octave/x26c.m
@@ -244,7 +244,7 @@
 
   plscol0a( 15, 32, 32, 32, 0.70 );
 
-  [legend_width, legend_height] = \
+  [legend_width, legend_height] = ...
       pllegend( bitor(PL_LEGEND_BACKGROUND, PL_LEGEND_BOUNDING_BOX), 0, 0.0, 0.0,
                0.1, 15, 1, 1, 0, 0, opt_array, 1.0, 1.0, 2.0,
                1., text_colors, text, 
--- a/examples/octave/x29c.m
+++ b/examples/octave/x29c.m
@@ -122,8 +122,8 @@
   i = 0:npts-1;
   x = i*60.0*60.0*24.0;
   p = asin(0.39795*cos(0.2163108 + 2*atan(0.9671396*tan(0.00860*(i-186)))));
-  d = 24.0 - (24.0/pi)*acos( (sin(0.8333*pi/180.0) + \
-			      sin(lat*pi/180.0)*sin(p)) \
+  d = 24.0 - (24.0/pi)*acos( (sin(0.8333*pi/180.0) +
+			      sin(lat*pi/180.0)*sin(p))
 			    ./(cos(lat*pi/180.0)*cos(p)) ); 
   y = d;
   
