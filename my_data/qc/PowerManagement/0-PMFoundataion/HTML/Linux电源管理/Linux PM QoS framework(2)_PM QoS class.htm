 
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<title>Linux PM QoS framework(2)_PM QoS class</title>
<meta name="keywords" content="Linux 嵌入式 ARM RTOS Technology 享受 C语言,Linux,Kernel,pm_qos,qos" />
<meta name="description" content="1. 前言  回顾上一篇文章（Linux PM QoS framework(1)..." />
<meta name="generator" content="emlog" />
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.wowotech.net/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.wowotech.net/wlwmanifest.xml" />
<link rel="alternate" type="application/rss+xml" title="RSS"  href="http://www.wowotech.net/rss.php" />
<link href="http://www.wowotech.net/content/templates/default/main.css" rel="stylesheet" type="text/css" />
<link href="http://www.wowotech.net/admin/editor/plugins/code/prettify.css" rel="stylesheet" type="text/css" />
<script src="http://www.wowotech.net/admin/editor/plugins/code/prettify.js" type="text/javascript"></script>
<script src="http://www.wowotech.net/include/lib/js/common_tpl.js" type="text/javascript"></script>
<!--[if IE 6]>
<script src="http://www.wowotech.net/content/templates/default/iefix.js" type="text/javascript"></script>
<![endif]-->
</head>
<body>
<div id="wrap">
  <div id="header">
    <h1><a href="http://www.wowotech.net/">蜗窝科技</a></h1>
    <h3>慢下来，享受技术。</h3>
  </div>
    <div id="banner"><a href="http://www.wowotech.net/"><img src="http://www.wowotech.net/content/uploadfile/201401/top-1389777175.jpg" height="134" width="960" /></a></div>
    <div id="nav">	<ul class="bar">
			<li class="item common">
			<a href="http://www.wowotech.net/" >博客</a>
					</li>
			<li class="item common">
			<a href="http://www.wowotech.net/sort/project" >项目</a>
			            <ul class="sub-nav">
                <li><a href="http://www.wowotech.net/sort/x_project">X Project</a></li>			</ul>
            		</li>
			<li class="item common">
			<a href="http://www.wowotech.net/forum" target="_blank">讨论区</a>
					</li>
			<li class="item common">
			<a href="http://www.wowotech.net/about.html" >关于蜗窝</a>
					</li>
			<li class="item common">
			<a href="http://www.wowotech.net/contact_us.html" >联系我们</a>
					</li>
			<li class="item common">
			<a href="http://www.wowotech.net/support_us.html" >支持我们</a>
					</li>
			<li class="item common">
			<a href="http://www.wowotech.net/admin" >登录</a>
					</li>
		</ul>
</div>﻿<div id="content">
<div id="contentleft">
	<h2>Linux PM QoS framework(2)_PM QoS class</h2>
	<p class="date">作者：<a href="http://www.wowotech.net/author/2" title=" runangaozhong@163.com">wowo</a> 发布于：2015-2-10 23:09 
			分类：<a href="http://www.wowotech.net/sort/pm_subsystem">电源管理子系统</a>
	 	</p>
	<h4>1. 前言</h4>  <p>回顾上一篇文章（<a href="http://www.wowotech.net/pm_subsystem/pm_qos_overview.html">Linux PM QoS framework(1)_概述和软件架构</a>），PM QoS framework抽象出4个系统级别的QoS constraint（统称为PM QoS class），分别是cpu&dma latency、network latency、network throughput和memory bandwidth。并提供一系列的接口，动态的搜集、整理系统对这些constraint的需求情况。</p>  <h4>2. API汇整</h4>  <p>PM QoS class framework提供的API有2类：一类是以函数调用的形式，为kernel space的driver、service等提供的；另一类是以misc设备的形式，为用户空间进程提供的。</p>  <p><strong>2.1 向kernel其它driver提供的，用于提出PM QoS需求的API</strong></p>  <blockquote>   <p>void pm_qos_add_request(struct pm_qos_request *req, int pm_qos_class,      <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; s32 value);       <br />void pm_qos_update_request(struct pm_qos_request *req,       <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; s32 new_value);       <br />void pm_qos_update_request_timeout(struct pm_qos_request *req,       <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; s32 new_value, unsigned long timeout_us);       <br />void pm_qos_remove_request(struct pm_qos_request *req);</p>    <p>int pm_qos_request_active(struct pm_qos_request *req);</p> </blockquote>  <p>1）pm_qos_add_request</p>  <p>该接口用于向PM QoS framework添加一个QoS请求，pm_qos_class为QoS请求的类型（kernel称作pm qos class），value为期望的QoS值，不同的class有不同的含义。pm qos class的定义如下：</p>  <div id="codeSnippetWrapper" style="overflow: auto; cursor: text; font-size: 8pt; border-top: silver 1px solid; font-family: &#39;Courier New&#39;, courier, monospace; border-right: silver 1px solid; width: 97.5%; border-bottom: silver 1px solid; padding-bottom: 4px; direction: ltr; text-align: left; padding-top: 4px; padding-left: 4px; margin: 20px 0px 10px; border-left: silver 1px solid; line-height: 12pt; padding-right: 4px; max-height: 200px; background-color: #f4f4f4">   <div id="codeSnippet" style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4">     <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum1" style="color: #606060">   1:</span> <span style="color: #008000">/* include/linux/pm_qos.h */</span></pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum2" style="color: #606060">   2:</span> <span style="color: #0000ff">enum</span> {</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum3" style="color: #606060">   3:</span>         PM_QOS_RESERVED = 0,</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum4" style="color: #606060">   4:</span>         PM_QOS_CPU_DMA_LATENCY,</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum5" style="color: #606060">   5:</span>         PM_QOS_NETWORK_LATENCY,</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum6" style="color: #606060">   6:</span>         PM_QOS_NETWORK_THROUGHPUT,</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum7" style="color: #606060">   7:</span>         PM_QOS_MEMORY_BANDWIDTH,</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum8" style="color: #606060">   8:</span>&#160; </pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum9" style="color: #606060">   9:</span>         <span style="color: #008000">/* insert new class ID */</span></pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum10" style="color: #606060">  10:</span>         PM_QOS_NUM_CLASSES,</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum11" style="color: #606060">  11:</span> };</pre>
<!--CRLF--></div>
</div>

<blockquote>
  <p>PM_QOS_CPU_DMA_LATENCY，CPU和DMA的延迟（单位为us），它的实际意义是，当产生一个事件之后（如一个中断），CPU或DMA的响应延迟。例如有些CPU的串口控制器，只有几个byte的FIFO，当接收数据时，CPU或DMA必须在FIFO填满前，将数据读走，否则就可能丢失数据或者降低数据的传输速率。</p>

  <p>后面几个class，不再详细说明。</p>
</blockquote>

<p>以PM_QOS_CPU_DMA_LATENCY为例，pm_qos_add_request的逻辑可以总结为：<font color="#0000ff">我要求CPU&DMA的latency不大于‘value’个us</font>。</p>

<p>另外，为了便于对已添加请求的维护（修改、移除等），framework会将该请求保存在一个句柄中，就是第一个参数--struct pm_qos_request指针。调用者不需要知道该结构的具体内容，只要定义一个变量，并把指针传给pm_qos_add_request接口，以后使用该指针进行修改、移除等操作。</p>

<p>2）pm_qos_update_request/pm_qos_update_request_timeout</p>

<p>如果应用场景改变（如串口波特率变大，相应的响应延迟就要变小），可以通过该接口更新QoS请求。req为句柄指针，new_value为新的value。</p>

<p>pm_qos_update_request_timeout多了一个timeout参数，用于需要在一段时间（timeout时间）内修改QoS value的场景。framework会在timeout后，自动将QoS value修改为一个默认值（一般为无效值，代表不再对该QoS有要求）。</p>

<p>3）pm_qos_remove_request</p>

<p>如果对该pm qos class不再有要求，则可以调用该接口将请求移除。</p>

<p>4）pm_qos_request_active</p>

<p>该接口可以获取某一个QoS请求的active状态。</p>

<p><strong>2.2 向kernel PM有关的service提供的，用于获取、跟踪指定PM QoS需求的API</strong></p>

<blockquote>
  <p>int pm_qos_request(int pm_qos_class); 
    <br />int pm_qos_add_notifier(int pm_qos_class, struct notifier_block *notifier); 

    <br />int pm_qos_remove_notifier(int pm_qos_class, struct notifier_block *notifier); 

    <br /></p>
</blockquote>

<p><font style="background-color: #ffffff">每当有新的QoS请求时。framework都会根据该QoS class的含义，计算出满足所有请求的一个极值（如最大值、最小值等等）。该值可以通过pm_qos_request接口获得。例如cpuidle framework在选择C state时，会通过该接口获得系统对CPU&DMA latency的需求，并保证从C state返回时的延迟小于该value。</font></p>

<p>另外，如果某个实体在意某一个class的QoS value变化，可以通过pm_qos_add_notifier接口添加一个notifier，这样当value变化时，framework便会通过notifier的回调函数，通知该实体。</p>

<p>同理，pm_qos_remove_notifier用于删除notifier。</p>

<p><font style="background-color: #ffffff"><strong>2.3 向per-device PM QoS framework提供，low level的PM QoS操作API</strong></font></p>

<blockquote>
  <p>int pm_qos_update_target(struct pm_qos_constraints *c, struct plist_node *node, 
    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; enum pm_qos_req_action action, int value); 

    <br />bool pm_qos_update_flags(struct pm_qos_flags *pqf, 

    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; struct pm_qos_flags_request *req, 

    <br />&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160; enum pm_qos_req_action action, s32 val);</p>

  <p>s32 pm_qos_read_value(struct pm_qos_constraints *c);</p>
</blockquote>

<p>QoS class和per-device PM QoS都是基于底层的pm qos constraint封装而来的。对QoS class的使用者而言，可以不用关心这些底层细节。对per-device PM QoS framework而言，则需要利用它们实现自身的功能。</p>

<p>这些接口就是提供给per-device PM QoS framework的low level接口，后面再详细介绍。</p>

<p><strong>2.4 向用户空间process提供的，用于提出QoS需求的API</strong></p>

<p>根据不同的PM QoS class，包括(cpu&dma latency、network latency等等)：</p>

<blockquote>
  <p>/dev/cpu_dma_latency 
    <br />/dev/network_latency 

    <br />/dev/network_throughput 

    <br />/dev/memory_bandwidth 

    <br /></p>
</blockquote>

<p>打开文件，将会使用默认值向PM QoS framework添加一个QoS请求；关闭文件，会移除相应的请求；写入value，更改请求的值；读取文件，将会获取QoS的极值。</p>

<p>具体和2.1中的各个接口类似，不再详细说明了。</p>

<h4>3. 实现思路和内部逻辑</h4>

<p><strong>3.1 主要数据结构</strong></p>

<p>1）struct pm_qos_request，pm qos request句柄，用于request的add、update、remove等操作</p>

<div id="codeSnippetWrapper" style="overflow: auto; cursor: text; font-size: 8pt; border-top: silver 1px solid; font-family: &#39;Courier New&#39;, courier, monospace; border-right: silver 1px solid; width: 97.5%; border-bottom: silver 1px solid; padding-bottom: 4px; direction: ltr; text-align: left; padding-top: 4px; padding-left: 4px; margin: 20px 0px 10px; border-left: silver 1px solid; line-height: 12pt; padding-right: 4px; max-height: 200px; background-color: #f4f4f4">
  <div id="codeSnippet" style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4">
    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum1" style="color: #606060">   1:</span> <span style="color: #0000ff">struct</span> pm_qos_request {</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum2" style="color: #606060">   2:</span>         <span style="color: #0000ff">struct</span> plist_node node;</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum3" style="color: #606060">   3:</span>         <span style="color: #0000ff">int</span> pm_qos_class;</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum4" style="color: #606060">   4:</span>         <span style="color: #0000ff">struct</span> delayed_work work; <span style="color: #008000">/* for pm_qos_update_request_timeout */</span></pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum5" style="color: #606060">   5:</span> };</pre>
<!--CRLF--></div>
</div>

<blockquote>
  <p>node，一个struct plist_node类型的节点，在保存request的value值（node.prio）的同时，可以将request按照一定的顺序，保存在一个全局的链表中；</p>

  <p>pm_qos_class，该request对应的qos class，可以为PM_QOS_CPU_DMA_LATENCY、PM_QOS_NETWORK_LATENCY、PM_QOS_NETWORK_THROUGHPUT、PM_QOS_MEMORY_BANDWIDTH中的一种；</p>

  <p>一个delay work，用于实现pm_qos_update_request_timeout接口。</p>
</blockquote>

<p>struct plist_node是一个按照优先级（prio）降序排列的双向链表（Descending-priority-sorted double-linked），除了常规链表所具备的head和tail之外，有一个prio字段，刚好可以应用在PM QoS class的场景中。</p>

<p>2）struct pm_qos_constraints，pm qos的内部抽象，用于抽象某一特定的PM QoS class</p>

<div id="codeSnippetWrapper" style="overflow: auto; cursor: text; font-size: 8pt; border-top: silver 1px solid; font-family: &#39;Courier New&#39;, courier, monospace; border-right: silver 1px solid; width: 97.5%; border-bottom: silver 1px solid; padding-bottom: 4px; direction: ltr; text-align: left; padding-top: 4px; padding-left: 4px; margin: 20px 0px 10px; border-left: silver 1px solid; line-height: 12pt; padding-right: 4px; max-height: 200px; background-color: #f4f4f4">
  <div id="codeSnippet" style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4">
    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum1" style="color: #606060">   1:</span> <span style="color: #0000ff">struct</span> pm_qos_constraints {</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum2" style="color: #606060">   2:</span>         <span style="color: #0000ff">struct</span> plist_head list;</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum3" style="color: #606060">   3:</span>         s32 target_value;       <span style="color: #008000">/* Do not change to 64 bit */</span></pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum4" style="color: #606060">   4:</span>         s32 default_value;</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum5" style="color: #606060">   5:</span>         s32 no_constraint_value;</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum6" style="color: #606060">   6:</span>         <span style="color: #0000ff">enum</span> pm_qos_type type;</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum7" style="color: #606060">   7:</span>         <span style="color: #0000ff">struct</span> blocking_notifier_head *notifiers;</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum8" style="color: #606060">   8:</span> };</pre>
<!--CRLF--></div>
</div>

<blockquote>
  <p>list，链表头，所有该class的request，都会挂到该list上；</p>

  <p>target_value，该constraint的目标值，即可以满足所有该class的request那个value。通常情况下，根据request的类型（enum pm_qos_type），可以是所有request中的最大值，所有request中的最小值，或者所有request的和；</p>

  <p>default_value，该constraint的默认值，通常为0，表示没有限制（或没有要求）；</p>

  <p>no_constraint_value，当该class的qos不存在请求时，pm_qos_get_value返回的值，通常为默认值，表示没有限制（或没有要求）；</p>

  <p>type，该constraint的类型，具体请参考下面的描述；</p>

  <p>notifiers，用于constraint value改变时通知其它driver。</p>
</blockquote>

<p>enum pm_qos_type包括PM_QOS_MAX、PM_QOS_MIN和PM_QOS_SUM。PM_QOS_MAX表示在所有的request中取最大值，即可满足所有的request，如network_throughput；PM_QOS_MIN表示在所有的request中取最小值，即可满足所有的request，如cpu_dma_latency；PM_QOS_SUM表示在所有的request中取和，才能满足所有的request，如memory_bandwidth。</p>

<p>当调用pm_qos_get_value接口时，framework会更具qos type，从list head中，取最小值、最大值或者所有值的和。</p>

<p><strong>3.2 实现逻辑</strong></p>

<p>QoS class framework为每个class定义了一个全局的struct pm_qos_constraints变量，用于保存所有该class的request。同时为每个class定义一个misc device变量，用于向用户空间提供接口。最终，将这些信息组织在一个内部的数据结构中（struct pm_qos_object），如下（具体内容可参考kernel/power/qos.c，这里不再详细介绍）：</p>

<div id="codeSnippetWrapper" style="overflow: auto; cursor: text; font-size: 8pt; border-top: silver 1px solid; font-family: &#39;Courier New&#39;, courier, monospace; border-right: silver 1px solid; width: 97.5%; border-bottom: silver 1px solid; padding-bottom: 4px; direction: ltr; text-align: left; padding-top: 4px; padding-left: 4px; margin: 20px 0px 10px; border-left: silver 1px solid; line-height: 12pt; padding-right: 4px; max-height: 200px; background-color: #f4f4f4">
  <div id="codeSnippet" style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4">
    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum1" style="color: #606060">   1:</span> <span style="color: #0000ff">struct</span> pm_qos_object {</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum2" style="color: #606060">   2:</span>         <span style="color: #0000ff">struct</span> pm_qos_constraints *constraints;</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum3" style="color: #606060">   3:</span>         <span style="color: #0000ff">struct</span> miscdevice pm_qos_power_miscdev;</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum4" style="color: #606060">   4:</span>         <span style="color: #0000ff">char</span> *name;</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum5" style="color: #606060">   5:</span> };</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum6" style="color: #606060">   6:</span>&#160; </pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum7" style="color: #606060">   7:</span> ...</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum8" style="color: #606060">   8:</span>&#160; </pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum9" style="color: #606060">   9:</span> <span style="color: #0000ff">static</span> <span style="color: #0000ff">struct</span> pm_qos_object *pm_qos_array[] = {</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum10" style="color: #606060">  10:</span>         &null_pm_qos,</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum11" style="color: #606060">  11:</span>         &cpu_dma_pm_qos,</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum12" style="color: #606060">  12:</span>         &network_lat_pm_qos,</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum13" style="color: #606060">  13:</span>         &network_throughput_pm_qos,</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: #f4f4f4"><span id="lnum14" style="color: #606060">  14:</span>         &memory_bandwidth_pm_qos,</pre>
<!--CRLF-->

    <pre style="border-top-style: none; overflow: visible; font-size: 8pt; font-family: &#39;Courier New&#39;, courier, monospace; width: 100%; border-bottom-style: none; color: black; padding-bottom: 0px; direction: ltr; text-align: left; padding-top: 0px; border-right-style: none; padding-left: 0px; margin: 0em; border-left-style: none; line-height: 12pt; padding-right: 0px; background-color: white"><span id="lnum15" style="color: #606060">  15:</span> };</pre>
<!--CRLF--></div>
</div>

<p>&#160;</p>

<p>1）pm_qos_add_request</p>

<p>request add接口会以qos class为index，从qos array中取出constraint指针（pm_qos_array[pm_qos_class]->constraints），并指针和request的value为参数，调用pm_qos_update_target接口。</p>

<p>pm_qos_update_target会将该request添加到constraint的list中，并根据qos type，计算处该class qos的target value。</p>

<p>pm_qos_update_request/pm_qos_update_request_timeout的逻辑类似，不再详细描述。</p>

<p>2）pm_qos_request</p>

<p>直接从该class对应的constraint变量中，获取target value（已经在新的request被add之后更新）。</p>

<p>3）misc设备注册</p>

<p>当kernel会在QoS class framework的初始化接口（pm_qos_power_init）中，调用misc_register，将各个class的miscdevice变量，注册到kernel中。misc设备提供了open、release、read、write等接口（pm_qos_power_fops，具体可参考源文件），用于qos的request、update和remove。</p>

<p>&#160;</p>

<p><em>原创文章，转发请注明出处。蜗窝科技</em>，<a href="http://www.wowotech.net/pm_subsystem/pm_qos_class.html">www.wowotech.net</a>。</p>	<p class="tag">标签:	<a href="http://www.wowotech.net/tag/Linux">Linux</a>	<a href="http://www.wowotech.net/tag/Kernel">Kernel</a>	<a href="http://www.wowotech.net/tag/pm_qos">pm_qos</a>	<a href="http://www.wowotech.net/tag/qos">qos</a></p>
		<a href="http://www.wowotech.net/support_us.html" style="display:block;text-align:center;">
		<img src="http://www.wowotech.net/content/uploadfile/201605/ef3e1463542768.png" align="middle" width="86" height="40"/>
	</a>
	<div class="nextlog">		&laquo; <a href="http://www.wowotech.net/basic_subject/static-link.html">计算机科学基础知识（三）:静态库和静态链接</a>
				|
				 <a href="http://www.wowotech.net/basic_subject/compile-link-load.html">计算机科学基础知识（二）:Relocatable Object File</a>&raquo;
	</div>
		<a name="comments"></a>
	<p class="comment-header"><b>评论：</b></p>
			<div class="comment" id="comment-3958">
		<a name="3958"></a>
				<div class="comment-info">
			<b>wawayu </b><br /><span class="comment-time">2016-05-20 16:00</span>
			<div class="comment-content">我搜了一下代码，感觉这个qos没什么模块用啊</div>
			<div class="comment-reply"><a href="#comment-3958" onclick="commentReply(3958,this)">回复</a></div>
		</div>
			<div class="comment comment-children" id="comment-3960">
		<a name="3960"></a>
				<div class="comment-info">
			<b><a href="http://www.wowotech.net/" target="_blank">wowo</a> </b><br /><span class="comment-time">2016-05-20 16:12</span>
			<div class="comment-content">@wawayu：确实，当前的代码中很少使用。</div>
			<div class="comment-reply"><a href="#comment-3960" onclick="commentReply(3960,this)">回复</a></div>		</div>
			</div>
		</div>
		<div class="comment" id="comment-1345">
		<a name="1345"></a>
				<div class="comment-info">
			<b><a href="http://www.wowotech.net/" target="_blank">schedule</a> </b><br /><span class="comment-time">2015-03-16 09:31</span>
			<div class="comment-content">经楼主一描述，思路特别清晰！</div>
			<div class="comment-reply"><a href="#comment-1345" onclick="commentReply(1345,this)">回复</a></div>
		</div>
			<div class="comment comment-children" id="comment-1346">
		<a name="1346"></a>
				<div class="comment-info">
			<b>wowo </b><br /><span class="comment-time">2015-03-16 12:14</span>
			<div class="comment-content">@schedule：您过奖了的。</div>
			<div class="comment-reply"><a href="#comment-1346" onclick="commentReply(1346,this)">回复</a></div>		</div>
			</div>
		</div>
		<div class="comment" id="comment-1272">
		<a name="1272"></a>
				<div class="comment-info">
			<b><a href="http://www.wowotech.net/" target="_blank">haichunzhao</a> </b><br /><span class="comment-time">2015-03-04 10:57</span>
			<div class="comment-content">很详细！</div>
			<div class="comment-reply"><a href="#comment-1272" onclick="commentReply(1272,this)">回复</a></div>
		</div>
			</div>
	    <div id="pagenavi">
	        </div>
		<div id="comment-place">
	<div class="comment-post" id="comment-post">
		<div class="cancel-reply" id="cancel-reply" style="display:none"><a href="javascript:void(0);" onclick="cancelReply()">取消回复</a></div>
		<p class="comment-header"><b>发表评论：</b><a name="respond"></a></p>
		<form method="post" name="commentform" action="http://www.wowotech.net/index.php?action=addcom" id="commentform">
			<input type="hidden" name="gid" value="144" />
						<p>
				<input type="text" name="comname" maxlength="49" value="" size="22" tabindex="1">
				<label for="author"><small>昵称</small></label>
			</p>
			<p>
				<input type="text" name="commail"  maxlength="128"  value="" size="22" tabindex="2">
				<label for="email"><small>邮件地址 (选填)</small></label>
			</p>
			<p>
				<input type="text" name="comurl" maxlength="128"  value="" size="22" tabindex="3">
				<label for="url"><small>个人主页 (选填)</small></label>
			</p>
						<p><textarea name="comment" id="comment" rows="10" tabindex="4"></textarea></p>
			<p><img src="http://www.wowotech.net/include/lib/checkcode.php" align="absmiddle" /><input name="imgcode" type="text" class="input" size="5" tabindex="5" /> <input type="submit" id="comment_submit" value="发表评论" tabindex="6" /></p>
			<input type="hidden" name="pid" id="comment-pid" value="0" size="22" tabindex="1"/>
		</form>
	</div>
	</div>
		<div style="clear:both;"></div>
</div><!--end #contentleft-->
<ul id="sidebar">
	<li>
	<h3><span>站内搜索</span></h3>
	<ul>
	<script type="text/javascript">document.write(unescape('%3Cdiv id="bdcs"%3E%3C/div%3E%3Cscript charset="utf-8" src="http://znsv.baidu.com/customer_search/api/js?sid=16798210514584749375') + '&plate_url=' + (encodeURIComponent(window.location.href)) + '&t=' + (Math.ceil(new Date()/3600000)) + unescape('"%3E%3C/script%3E'));</script>	</ul>
	</li>
	<li>
	<h3><span>功能</span></h3>
	<ul>
	<a href="http://www.wowotech.net/message_board.html">留言板<br></a>
<a href="http://www.wowotech.net/?plugin=commentlist">评论列表<br></a>	</ul>
	</li>
	<li>
	<h3><span>随机文章</span></h3>
	<ul id="randlog">
		<li><a href="http://www.wowotech.net/bluetooth/bt_overview.html">蓝牙协议分析(1)_基本概念</a></li>
		<li><a href="http://www.wowotech.net/pm_subsystem/rpm_overview.html">Linux电源管理(11)_Runtime PM之功能描述</a></li>
		<li><a href="http://www.wowotech.net/73.html">建立讨论区的原因</a></li>
		<li><a href="http://www.wowotech.net/comm/i2c_consumer.html">Linux I2C framework(3)_I2C consumer</a></li>
		<li><a href="http://www.wowotech.net/linux_application/wifi-test-2.html">Debian下的WiFi实验（二）：无线网卡自动连接AP</a></li>
		</ul>
	</li>
	<li>
	<h3><span>最新评论</span></h3>
	<ul id="newcomment">
		<li id="comment">simonzhang	<br /><a href="http://www.wowotech.net/device_model/dt-code-analysis.html#4135">感谢郭同学获益良多</a></li>
		<li id="comment">zcjfish	<br /><a href="http://www.wowotech.net/irq_subsystem/alloc_workqueue.html#4134">@zcjfish：修正下第二个问题：&nbsp;&nbsp;第二个问题是假设有4...</a></li>
		<li id="comment">zcjfish	<br /><a href="http://www.wowotech.net/irq_subsystem/alloc_workqueue.html#4133">现在的ARM core都有hotplug功能，就是说如果lo...</a></li>
		<li id="comment">zcjfish	<br /><a href="http://www.wowotech.net/irq_subsystem/gic_driver.html#4132">你好，请问PPI 中断的使用场景都有哪些？ 或者说什么样的中...</a></li>
		<li id="comment">XXX	<br /><a href="http://www.wowotech.net/gpio_subsystem/pin-controller-driver.html#4131">膜拜~</a></li>
		</ul>
	</li>
	<li>
	<h3><span>文章分类</span></h3>
	<ul id="blogsort">
		<li>
	<a href="http://www.wowotech.net/sort/linux_kenrel">Linux内核分析(10)</a>
	<a href="http://www.wowotech.net/rss.php?sort=4"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
			<ul>
				<li>
			<a href="http://www.wowotech.net/sort/device_model">统一设备模型(14)</a>
			<a href="http://www.wowotech.net/rss.php?sort=12"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
		</li>
				<li>
			<a href="http://www.wowotech.net/sort/pm_subsystem">电源管理子系统(40)</a>
			<a href="http://www.wowotech.net/rss.php?sort=13"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
		</li>
				<li>
			<a href="http://www.wowotech.net/sort/irq_subsystem">中断子系统(14)</a>
			<a href="http://www.wowotech.net/rss.php?sort=14"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
		</li>
				<li>
			<a href="http://www.wowotech.net/sort/process_management">进程管理(5)</a>
			<a href="http://www.wowotech.net/rss.php?sort=15"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
		</li>
				<li>
			<a href="http://www.wowotech.net/sort/kernel_synchronization">内核同步机制(17)</a>
			<a href="http://www.wowotech.net/rss.php?sort=16"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
		</li>
				<li>
			<a href="http://www.wowotech.net/sort/gpio_subsystem">GPIO子系统(3)</a>
			<a href="http://www.wowotech.net/rss.php?sort=17"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
		</li>
				<li>
			<a href="http://www.wowotech.net/sort/timer_subsystem">时间子系统(13)</a>
			<a href="http://www.wowotech.net/rss.php?sort=18"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
		</li>
				<li>
			<a href="http://www.wowotech.net/sort/comm">通信类协议(4)</a>
			<a href="http://www.wowotech.net/rss.php?sort=20"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
		</li>
				<li>
			<a href="http://www.wowotech.net/sort/memory_management">内存管理(5)</a>
			<a href="http://www.wowotech.net/rss.php?sort=21"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
		</li>
				<li>
			<a href="http://www.wowotech.net/sort/graphic_subsystem">图形子系统(1)</a>
			<a href="http://www.wowotech.net/rss.php?sort=23"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
		</li>
				<li>
			<a href="http://www.wowotech.net/sort/filesystem">文件系统(0)</a>
			<a href="http://www.wowotech.net/rss.php?sort=26"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
		</li>
				</ul>
			<li>
	<a href="http://www.wowotech.net/sort/u-boot">u-boot分析(2)</a>
	<a href="http://www.wowotech.net/rss.php?sort=25"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
			<li>
	<a href="http://www.wowotech.net/sort/linux_application">Linux应用技巧(11)</a>
	<a href="http://www.wowotech.net/rss.php?sort=3"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
			<li>
	<a href="http://www.wowotech.net/sort/soft">软件开发(6)</a>
	<a href="http://www.wowotech.net/rss.php?sort=1"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
			<li>
	<a href="http://www.wowotech.net/sort/basic_tech">基础技术(4)</a>
	<a href="http://www.wowotech.net/rss.php?sort=6"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
			<ul>
				<li>
			<a href="http://www.wowotech.net/sort/bluetooth">蓝牙(9)</a>
			<a href="http://www.wowotech.net/rss.php?sort=10"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
		</li>
				<li>
			<a href="http://www.wowotech.net/sort/armv8a_arch">ARMv8A Arch(7)</a>
			<a href="http://www.wowotech.net/rss.php?sort=19"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
		</li>
				<li>
			<a href="http://www.wowotech.net/sort/display">显示(3)</a>
			<a href="http://www.wowotech.net/rss.php?sort=22"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
		</li>
				</ul>
			<li>
	<a href="http://www.wowotech.net/sort/basic_subject">基础学科(9)</a>
	<a href="http://www.wowotech.net/rss.php?sort=7"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
			<li>
	<a href="http://www.wowotech.net/sort/tech_discuss">技术漫谈(10)</a>
	<a href="http://www.wowotech.net/rss.php?sort=8"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
			<li>
	<a href="http://www.wowotech.net/sort/project">项目专区(0)</a>
	<a href="http://www.wowotech.net/rss.php?sort=9"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
			<ul>
				<li>
			<a href="http://www.wowotech.net/sort/x_project">X Project(5)</a>
			<a href="http://www.wowotech.net/rss.php?sort=24"><img src="http://www.wowotech.net/content/templates/default/images/rss.png" alt="订阅该分类"/></a>
		</li>
				</ul>
			</ul>
	</li>
	<li>
	<h3><span>文章存档</span></h3>
	<ul id="record">
		<li><a href="http://www.wowotech.net/record/201606">2016年6月(8)</a></li>
		<li><a href="http://www.wowotech.net/record/201605">2016年5月(8)</a></li>
		<li><a href="http://www.wowotech.net/record/201604">2016年4月(7)</a></li>
		<li><a href="http://www.wowotech.net/record/201603">2016年3月(5)</a></li>
		<li><a href="http://www.wowotech.net/record/201602">2016年2月(5)</a></li>
		<li><a href="http://www.wowotech.net/record/201601">2016年1月(6)</a></li>
		<li><a href="http://www.wowotech.net/record/201512">2015年12月(6)</a></li>
		<li><a href="http://www.wowotech.net/record/201511">2015年11月(9)</a></li>
		<li><a href="http://www.wowotech.net/record/201510">2015年10月(9)</a></li>
		<li><a href="http://www.wowotech.net/record/201509">2015年9月(4)</a></li>
		<li><a href="http://www.wowotech.net/record/201508">2015年8月(3)</a></li>
		<li><a href="http://www.wowotech.net/record/201507">2015年7月(7)</a></li>
		<li><a href="http://www.wowotech.net/record/201506">2015年6月(3)</a></li>
		<li><a href="http://www.wowotech.net/record/201505">2015年5月(7)</a></li>
		<li><a href="http://www.wowotech.net/record/201504">2015年4月(9)</a></li>
		<li><a href="http://www.wowotech.net/record/201503">2015年3月(9)</a></li>
		<li><a href="http://www.wowotech.net/record/201502">2015年2月(6)</a></li>
		<li><a href="http://www.wowotech.net/record/201501">2015年1月(6)</a></li>
		<li><a href="http://www.wowotech.net/record/201412">2014年12月(17)</a></li>
		<li><a href="http://www.wowotech.net/record/201411">2014年11月(8)</a></li>
		<li><a href="http://www.wowotech.net/record/201410">2014年10月(9)</a></li>
		<li><a href="http://www.wowotech.net/record/201409">2014年9月(7)</a></li>
		<li><a href="http://www.wowotech.net/record/201408">2014年8月(12)</a></li>
		<li><a href="http://www.wowotech.net/record/201407">2014年7月(6)</a></li>
		<li><a href="http://www.wowotech.net/record/201406">2014年6月(6)</a></li>
		<li><a href="http://www.wowotech.net/record/201405">2014年5月(9)</a></li>
		<li><a href="http://www.wowotech.net/record/201404">2014年4月(9)</a></li>
		<li><a href="http://www.wowotech.net/record/201403">2014年3月(7)</a></li>
		<li><a href="http://www.wowotech.net/record/201402">2014年2月(3)</a></li>
		<li><a href="http://www.wowotech.net/record/201401">2014年1月(4)</a></li>
		</ul>
	</li>
<div class="rss">
<a href="http://www.wowotech.net/rss.php" title="RSS订阅"><img src="http://www.wowotech.net/content/templates/default/images/rss.gif" alt="订阅Rss"/></a>
</div>
</ul><!--end #siderbar-->
</div><!--end #content-->
<div style="clear:both;"></div>
<div id="footerbar">
	Copyright @ 2013-2015 <a href="http://www.wowotech.net" title="wowotech">蜗窝科技</a> All rights reserved.
	Powered by <a href="http://www.emlog.net" title="采用emlog系统">emlog</a>
	<a href="http://www.miibeian.gov.cn" target="_blank"></a> <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "//hm.baidu.com/hm.js?9d3da49d9cb9a5eaca161fc2905551df";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>	</div><!--end #footerbar-->
</div><!--end #wrap-->
<script>prettyPrint();</script>
</body>
</html>