MTK平台驱动在android系统下的实现，设计手机的个个模块


常见的概念：
1.EMI：电磁干扰
2.DCT
3.ACPI高级配置和电源管理接口
4.NVRAM非易失性随即访问存储器


1.eMMC是一种存储设备，内部集成了一个控制器，并提供标准接口管理闪存，而这个管理技术包括错误探测和纠正，Flash平均擦写，坏块管理，掉电保护等技术。NAND flash也是移动设备常用的一种存储芯片，但是没有管理功能。
对于eMMC分区分为boot1,boot2,RPMB,user data分区，用perl脚本获取分区信息和一些代码文件相关的信息，对于初始化内存分配等

2.****MTK平台系统的启动过程


3.fuel charge 对于充电的控制
	1.BAT_thread每10s检测充电，充电插头是否插入或者拔除。
	2.对于充电的检测，插头状态，充电类型
	3.从battery meter获取电池信息，根据电池信息决定启用那种充电方式
	4.温度检测是否正常
	5.检测电池状态
	6.通过uevent通知上层获取信息，
	7.充电算法，控制充电芯片工作
	8.上报电池信息给android系统
对充电电压和温度的检测，避免造成损伤，保护充电，充电过程中，如果打电话同时开路电压大于4.05v不充电

4.系统关闭充电或者重启的流程
要经过一系列的检测，上报


5.开始将android的编译方面内容，对于android的编译，不是很了解，有必要知道
   1.编译环境初始化。
	编译一个东西，首先要明确需要哪些软件，哪些库文件，编译的目标是什么，输出什么。初始化编译的环境，设置环境变量。
	编译android中，makefile是一个大的make文件，被分割成一个个小的文件，在各自的模块下。
	1. 将vendor和device目录下的vendorsetup.sh文件加载到了当前终端；

        2. 新增了lunch、m、mm和mmm等命令；

        3. 通过执行lunch命令设置好了TARGET_PRODUCT、TARGET_BUILD_VARIANT、TARGET_BUILD_TYPE和TARGET_BUILD_APPS等环境变量。  

6.log
手机正常的log在/sdcard/mtklog 下，死机log在/data/anr下
 adb pull  /sdcard/mtklog /home/llb/project/PRO/data/



